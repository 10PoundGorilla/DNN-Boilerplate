@inherits Custom.Hybrid.Razor14
@using ToSic.Razor.Blade

@{
    var items = AsList(Data);

    // Create dynamic carousel id based on EntityID to prevent duplicates
    string carouselId = String.Format("{0}-carousel", items.First().EntityId);

    var imageSettings = Kit.Image.Settings("Content", width: 600, height: 400, quality: 0.8);

    var defaultSlide = 0;

    var indicatorIndex = 0; // Index to track value in indicator loop
    var slideIndex = 0; // Index to track value in slide loop
}

<div class="row justify-content-center">
    <div class="col-12 col-md-10 col-xl-6">
        <div id="@(carouselId)" class="carousel slide">
            <div class="carousel-indicators">
                @foreach(var item in AsList(items)) {
                    var activeModifier = (indicatorIndex == defaultSlide) ? "active" : "";
                    var ariaCurrent = (indicatorIndex == defaultSlide) ? "true" : "false";

                    <button
                        type="button"
                        data-bs-target="#@(carouselId)"
                        data-bs-slide-to="@(indicatorIndex)"
                        class="@(activeModifier)"
                        aria-current="@(ariaCurrent)"
                        aria-label="Slide @(indicatorIndex)"
                    ></button>
                }
            </div>
            <div class="carousel-inner">
                @foreach(var item in AsList(items)) {
                    @* Only display Remove option if more than one item exists *@
                    var toolbar = (items.Count() > 1)
                        ? Html.Partial("partials/_toolbar.cshtml", new { data = item, type = "list-item-default" })
                        : Html.Partial("partials/_toolbar.cshtml", new { data = item, type = "list-item-no-remove" });

                    var altText = Text.First(item.Field("Image").Metadata.Description, item.AltText);
                    var activeModifier = (slideIndex == defaultSlide) ? "active" : "";

                    <div class="carousel-item @(activeModifier)" @toolbar>
                        @Kit.Image.Img(item.Field("Image"), settings: imageSettings, imgClass: "d-block w-100", imgAlt: altText)
                    </div>

                    slideIndex++;
                }
            </div>
            @* <button class="carousel-control-prev" type="button" data-bs-target="#@(carouselId)" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#@(carouselId)" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button> *@
        </div>
    </div>
</div>
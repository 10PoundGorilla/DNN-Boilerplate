@inherits Custom.Hybrid.RazorTyped
@using ToSic.Razor.Blade;

@{
    var items = MyItems;

    var defaultSlide = 0;

    string carouselId = String.Format("{0}-carousel", items.First().Id);

    var imageSettings = Kit.Image.Settings("Content", width: 1200, height: 400, quality: 0.8);

    var indicatorIndex = 0; // Index to track value in indicator loop
    var slideIndex = 0; // Index to track value in slide loop
    
}

<div id="@(carouselId)" class="carousel slide">
    <div class="carousel-indicators">
        @foreach(var item in items) {
            var activeModifier = (indicatorIndex == defaultSlide) ? "active" : "";
            var ariaCurrent = (indicatorIndex == defaultSlide) ? "true" : "false";

            <button
                type="button"
                data-bs-target="#@(carouselId)"
                data-bs-slide-to="@(indicatorIndex)"
                class="@(activeModifier)"
                aria-current="@(ariaCurrent)"
                aria-label="Slide @(indicatorIndex)"
            ></button>
           indicatorIndex++;
        }
    </div>
    <div class="carousel-inner">
        @foreach(var item in items) {
            @* Only display Remove option if more than one item exists *@
            var toolbar = (items.Count() > 1)
                ? Html.Partial("partials/_toolbar.cshtml", new { data = item, type = "list-item-default" })
                : Html.Partial("partials/_toolbar.cshtml", new { data = item, type = "list-item-no-remove" });
                
            var altText = Text.First(item.String("Image.Image.Metadata.Description"), item.String("Image.AltText"));
      
            var activeModifier = (slideIndex == defaultSlide) ? "active" : "";

            <div class="carousel-item @(activeModifier)" @toolbar>  
                  @Kit.Image.Img(item.Url("Image.Image"), settings: imageSettings, imgClass: "d-block w-100", imgAlt: altText)
                <div class="carousel-caption d-none d-md-block">
                    <h5>@item.String("Heading")</h5>
                    <p class="fw-bold">@item.String("Subheading")</p>
                    <p>@item.Html("BodyContent")</p>
                    <p>
                        @{
                            // Calls the fields of the Entity (in this case Links)
                            var links = item.Children("Links");
                        }
                        @foreach(var link in links) {
                            @Html.Partial("partials/_button.cshtml", new { btn = item.Child("Links"), style = "btn-primary", enableToolbar = false })
                        }
                    </p>
                </div>
            </div>

            slideIndex++;
        }
    </div>
    @*<button class="carousel-control-prev" type="button" data-bs-target="#@(carouselId)" data-bs-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Previous</span>
    </button>
    <button class="carousel-control-next" type="button" data-bs-target="#@(carouselId)" data-bs-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Next</span>
    </button>*@
</div>
